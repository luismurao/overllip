% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inEllipsoid.R
\name{inEllipsoid}
\alias{inEllipsoid}
\title{inEllipsoid: Determine if a point is inside or outside an ellipsoid}
\usage{
inEllipsoid(centroid, sigma, cf, env_data, suitability = TRUE)
}
\arguments{
\item{centroid}{A vector with coordinates of niche-centroid.}

\item{sigma}{A square matrix}

\item{cf}{Confidence level}

\item{env_data}{A data frame with the environmental training data.}

\item{suitability}{Logical. If TRUE niche-centroid distances are normalized to
suitability values.}
}
\value{
A matrix with 2 columns. The first "in_Ellipsoid" binary response
with values 1 (inside the ellipsoid) and zeros (outside the ellipsoid);
 the second "mh_dist" distance to niche-centroid. If suitability=TRUE,
 the distance can be normalized to suitability values ranging from 0 to 1,
 where a value of zero means outside the ellipsoid.
}
\description{
Determine if a point is inside or outside an ellipsoid.
}
\details{
The function can be call by using indexing operations implemented in
ellipsoid_metadata class. See second example
}
\examples{
\dontrun{
# ---------------------------------------------------------------------------
# First example:
# Create and ellipsoid_metadata object
# Then, extract a random sample from the hypervolume
# that encloses the ellipsoid
# Finally, determine which points from the random
# sample are inside the ellipsoid
# ---------------------------------------------------------------------------
set.seed(111)
mat <- matrix(rnorm(33),ncol=3)
centroid <- colMeans(mat)
sig <- cov(mat)
emdat <- overllip::ellipsoid_data(centroid=centroid,sigma =sig, cf=0.95)
hc <- overllip::hypercube(emdat,100000)
in_ellip_a <- overllip::inEllipsoid(centroid = emdat@centroid,
                                    sigma = emdat@sigma,
                                    cf= emdat@cf,
                                    env_data= hc)
rgl::plot3d(hc[in_ellip_a[,1],],
            col=hsv(0.85*in_ellip_a[,2][in_ellip_a[,1]],0.88,0.8),alpha=0.5)
plot(emdat,semiaxes=TRUE)
rgl::aspect3d("iso")
rgl::plot3d(hc[!in_ellip_a[,1],],col="gray70",add=T)
# ---------------------------------------------------------------------------
# Second example:
# Extract a random sample from the hypervolume
# that encloses the ellipsoid using indexing.
# ---------------------------------------------------------------------------
in_ellip_b <- emdat[hc]
suits <- as.numeric(names(in_ellip_b))
rgl::plot3d(hc[in_ellip_b,],
            col=hsv(0.85*suits[in_ellip_b],0.88,0.8),alpha=0.5)
rgl::plot3d(hc[!emdat[hc],],col="gray70",add=T)

#----------------------------------------------------------------------------
# Last example
# Ellipsoids in 2-D
#----------------------------------------------------------------------------
set.seed(111)
mat <- matrix(rnorm(20),ncol=2)
centroid <- colMeans(mat)
sig <- cov(mat)
emdat <- overllip::ellipsoid_data(centroid=centroid,sigma =sig, cf=0.95)
hc <- overllip::hypercube(emdat,5000)
in_ellip_a <- emdat[hc]
overllip::plot(emdat,semiaxes=TRUE,asp=1,xlab="dim1",ylab="dim2")
points(hc[in_ellip_a,],pch=".")
}
}
